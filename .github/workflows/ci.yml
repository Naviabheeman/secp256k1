name: Build and Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_system: [autotools, cmake]

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential autotools-dev automake pkg-config cmake

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install automake pkg-config cmake

    - name: Configure and build with Autotools
      if: matrix.build_system == 'autotools'
      run: |
        ./autogen.sh
        ./configure --disable-shared
        make -j$(nproc)
        make check

    - name: Configure and build with CMake
      if: matrix.build_system == 'cmake'
      run: |
        mkdir build && cd build
        cmake -DSECP256K1_BUILD_TESTS=ON -DBUILD_SHARED_LIBS=OFF ..
        cmake --build . --parallel
        ctest --output-on-failure

    - name: Run tests with Valgrind (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        if [ "${{ matrix.build_system }}" = "autotools" ]; then
          make check-valgrind
        else
          cd build
          ctest -T memcheck --output-on-failure
        fi 